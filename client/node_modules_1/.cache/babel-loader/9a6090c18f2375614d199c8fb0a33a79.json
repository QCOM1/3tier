{"ast":null,"code":"import _defineProperty from\"/home/ec2-user/go-to-do-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/ec2-user/go-to-do-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ec2-user/go-to-do-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/ec2-user/go-to-do-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/ec2-user/go-to-do-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/ec2-user/go-to-do-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import axios from\"axios\";import{Card,Header,Form,Input,Icon}from\"semantic-ui-react\";var endpoint=process.env.REACT_APP_API_ENDPOINT;var ToDoList=/*#__PURE__*/function(_Component){_inherits(ToDoList,_Component);function ToDoList(props){var _this;_classCallCheck(this,ToDoList);_this=_possibleConstructorReturn(this,_getPrototypeOf(ToDoList).call(this,props));_this.onChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.onSubmit=function(){var task=_this.state.task;// console.log(\"pRINTING task\", this.state.task);\nif(task){axios.post(endpoint+\"/api/task\",{task:task},{headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"}}).then(function(res){_this.getTask();_this.setState({task:\"\"});console.log(res);});}};_this.getTask=function(){axios.get(endpoint+\"/api/task\").then(function(res){console.log(res);if(res.data){_this.setState({items:res.data.map(function(item){var color=\"yellow\";if(item.status){color=\"green\";}return React.createElement(Card,{key:item._id,color:color,fluid:true},React.createElement(Card.Content,null,React.createElement(Card.Header,{textAlign:\"left\"},React.createElement(\"div\",{style:{wordWrap:\"break-word\"}},item.task)),React.createElement(Card.Meta,{textAlign:\"right\"},React.createElement(Icon,{name:\"check circle\",color:\"green\",onClick:function onClick(){return _this.updateTask(item._id);}}),React.createElement(\"span\",{style:{paddingRight:10}},\"Done\"),React.createElement(Icon,{name:\"undo\",color:\"yellow\",onClick:function onClick(){return _this.undoTask(item._id);}}),React.createElement(\"span\",{style:{paddingRight:10}},\"Undo\"),React.createElement(Icon,{name:\"delete\",color:\"red\",onClick:function onClick(){return _this.deleteTask(item._id);}}),React.createElement(\"span\",{style:{paddingRight:10}},\"Delete\"))));})});}else{_this.setState({items:[]});}});};_this.updateTask=function(id){axios.put(endpoint+\"/api/task/\"+id,{headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"}}).then(function(res){console.log(res);_this.getTask();});};_this.undoTask=function(id){axios.put(endpoint+\"/api/undoTask/\"+id,{headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"}}).then(function(res){console.log(res);_this.getTask();});};_this.deleteTask=function(id){axios.delete(endpoint+\"/api/deleteTask/\"+id,{headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"}}).then(function(res){console.log(res);_this.getTask();});};_this.state={task:\"\",items:[]};return _this;}_createClass(ToDoList,[{key:\"componentDidMount\",value:function componentDidMount(){this.getTask();}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"row\"},React.createElement(Header,{className:\"header\",as:\"h2\"},\"TO DO LIST\")),React.createElement(\"div\",{className:\"row\"},React.createElement(Form,{onSubmit:this.onSubmit},React.createElement(Input,{type:\"text\",name:\"task\",onChange:this.onChange,value:this.state.task,fluid:true,placeholder:\"Create Task\"}))),React.createElement(\"div\",{className:\"row\"},React.createElement(Card.Group,null,this.state.items)));}}]);return ToDoList;}(Component);export default ToDoList;","map":{"version":3,"sources":["/home/ec2-user/go-to-do-app/client/src/To-Do-List.js"],"names":["React","Component","axios","Card","Header","Form","Input","Icon","endpoint","process","env","REACT_APP_API_ENDPOINT","ToDoList","props","onChange","event","setState","target","name","value","onSubmit","task","state","post","headers","then","res","getTask","console","log","get","data","items","map","item","color","status","_id","wordWrap","updateTask","paddingRight","undoTask","deleteTask","id","put","delete"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\r\n\r\nlet endpoint = process.env.REACT_APP_API_ENDPOINT;\r\n\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      task: \"\",\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTask();\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    let { task } = this.state;\r\n    // console.log(\"pRINTING task\", this.state.task);\r\n    if (task) {\r\n      axios\r\n        .post(\r\n          endpoint + \"/api/task\",\r\n          {\r\n            task\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          this.getTask();\r\n          this.setState({\r\n            task: \"\"\r\n          });\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  getTask = () => {\r\n    axios.get(endpoint + \"/api/task\").then(res => {\r\n      console.log(res);\r\n      if (res.data) {\r\n        this.setState({\r\n          items: res.data.map(item => {\r\n            let color = \"yellow\";\r\n\r\n            if (item.status) {\r\n              color = \"green\";\r\n            }\r\n            return (\r\n              <Card key={item._id} color={color} fluid>\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"left\">\r\n                    <div style={{ wordWrap: \"break-word\" }}>{item.task}</div>\r\n                  </Card.Header>\r\n\r\n                  <Card.Meta textAlign=\"right\">\r\n                    <Icon\r\n                      name=\"check circle\"\r\n                      color=\"green\"\r\n                      onClick={() => this.updateTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Done</span>\r\n                    <Icon\r\n                      name=\"undo\"\r\n                      color=\"yellow\"\r\n                      onClick={() => this.undoTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Undo</span>\r\n                    <Icon\r\n                      name=\"delete\"\r\n                      color=\"red\"\r\n                      onClick={() => this.deleteTask(item._id)}\r\n                    />\r\n                    <span style={{ paddingRight: 10 }}>Delete</span>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          })\r\n        });\r\n      } else {\r\n        this.setState({\r\n          items: []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateTask = id => {\r\n    axios\r\n      .put(endpoint + \"/api/task/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  undoTask = id => {\r\n    axios\r\n      .put(endpoint + \"/api/undoTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n\r\n  deleteTask = id => {\r\n    axios\r\n      .delete(endpoint + \"/api/deleteTask/\" + id, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.getTask();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <Header className=\"header\" as=\"h2\">\r\n            TO DO LIST\r\n          </Header>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"task\"\r\n              onChange={this.onChange}\r\n              value={this.state.task}\r\n              fluid\r\n              placeholder=\"Create Task\"\r\n            />\r\n            {/* <Button >Create Task</Button> */}\r\n          </Form>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Card.Group>{this.state.items}</Card.Group>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}